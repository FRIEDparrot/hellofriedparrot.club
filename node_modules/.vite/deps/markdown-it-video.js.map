{
  "version": 3,
  "sources": ["../../markdown-it-video/index.js"],
  "sourcesContent": ["// Process @[youtube](youtubeVideoID)\n// Process @[vimeo](vimeoVideoID)\n// Process @[vine](vineVideoID)\n// Process @[prezi](preziID)\n// Process @[osf](guid)\n\nconst ytRegex = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\nfunction youtubeParser(url) {\n  const match = url.match(ytRegex);\n  return match && match[7].length === 11 ? match[7] : url;\n}\n\n/* eslint-disable max-len */\nconst vimeoRegex = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|)(\\d+)(?:$|\\/|\\?)/;\n/* eslint-enable max-len */\nfunction vimeoParser(url) {\n  const match = url.match(vimeoRegex);\n  return match && typeof match[3] === 'string' ? match[3] : url;\n}\n\nconst vineRegex = /^http(?:s?):\\/\\/(?:www\\.)?vine\\.co\\/v\\/([a-zA-Z0-9]{1,13}).*/;\nfunction vineParser(url) {\n  const match = url.match(vineRegex);\n  return match && match[1].length === 11 ? match[1] : url;\n}\n\nconst preziRegex = /^https:\\/\\/prezi.com\\/(.[^/]+)/;\nfunction preziParser(url) {\n  const match = url.match(preziRegex);\n  return match ? match[1] : url;\n}\n\n// TODO: Write regex for staging and local servers.\nconst mfrRegex = /^http(?:s?):\\/\\/(?:www\\.)?mfr\\.osf\\.io\\/render\\?url=http(?:s?):\\/\\/osf\\.io\\/([a-zA-Z0-9]{1,5})\\/\\?action=download/;\nfunction mfrParser(url) {\n  const match = url.match(mfrRegex);\n  return match ? match[1] : url;\n}\n\n\nconst EMBED_REGEX = /@\\[([a-zA-Z].+)]\\([\\s]*(.*?)[\\s]*[)]/im;\n\nfunction videoEmbed(md, options) {\n  function videoReturn(state, silent) {\n    var serviceEnd;\n    var serviceStart;\n    var token;\n    var videoID;\n    var theState = state;\n    const oldPos = state.pos;\n\n    if (state.src.charCodeAt(oldPos) !== 0x40/* @ */ ||\n        state.src.charCodeAt(oldPos + 1) !== 0x5B/* [ */) {\n      return false;\n    }\n\n    const match = EMBED_REGEX.exec(state.src.slice(state.pos, state.src.length));\n\n    if (!match || match.length < 3) {\n      return false;\n    }\n\n    const service = match[1];\n    videoID = match[2];\n    const serviceLower = service.toLowerCase();\n\n    if (serviceLower === 'youtube') {\n      videoID = youtubeParser(videoID);\n    } else if (serviceLower === 'vimeo') {\n      videoID = vimeoParser(videoID);\n    } else if (serviceLower === 'vine') {\n      videoID = vineParser(videoID);\n    } else if (serviceLower === 'prezi') {\n      videoID = preziParser(videoID);\n    } else if (serviceLower === 'osf') {\n      videoID = mfrParser(videoID);\n    } else if (!options[serviceLower]) {\n      return false;\n    }\n\n    // If the videoID field is empty, regex currently make it the close parenthesis.\n    if (videoID === ')') {\n      videoID = '';\n    }\n\n    serviceStart = oldPos + 2;\n    serviceEnd = md.helpers.parseLinkLabel(state, oldPos + 1, false);\n\n    //\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      theState.pos = serviceStart;\n      theState.service = theState.src.slice(serviceStart, serviceEnd);\n      const newState = new theState.md.inline.State(service, theState.md, theState.env, []);\n      newState.md.inline.tokenize(newState);\n\n      token = theState.push('video', '');\n      token.videoID = videoID;\n      token.service = service;\n      token.level = theState.level;\n    }\n\n    theState.pos += theState.src.indexOf(')', theState.pos);\n    return true;\n  }\n\n  return videoReturn;\n}\n\nfunction videoUrl(service, videoID, options) {\n  switch (service) {\n    case 'youtube':\n      return 'https://www.youtube.com/embed/' + videoID;\n    case 'vimeo':\n      return 'https://player.vimeo.com/video/' + videoID;\n    case 'vine':\n      return 'https://vine.co/v/' + videoID + '/embed/' + options.vine.embed;\n    case 'prezi':\n      return 'https://prezi.com/embed/' + videoID +\n        '/?bgcolor=ffffff&amp;lock_to_path=0&amp;autoplay=0&amp;autohide_ctrls=0&amp;' +\n        'landing_data=bHVZZmNaNDBIWnNjdEVENDRhZDFNZGNIUE43MHdLNWpsdFJLb2ZHanI5N1lQVHkxSHFxazZ0UUNCRHloSXZROHh3PT0&amp;' +\n        'landing_sign=1kD6c0N6aYpMUS0wxnQjxzSqZlEB8qNFdxtdjYhwSuI';\n    case 'osf':\n      return 'https://mfr.osf.io/render?url=https://osf.io/' + videoID + '/?action=download';\n    default:\n      return service;\n  }\n}\n\nfunction tokenizeVideo(md, options) {\n  function tokenizeReturn(tokens, idx) {\n    const videoID = md.utils.escapeHtml(tokens[idx].videoID);\n    const service = md.utils.escapeHtml(tokens[idx].service).toLowerCase();\n    var checkUrl = /http(?:s?):\\/\\/(?:www\\.)?[a-zA-Z0-9-:.]{1,}\\/render(?:\\/)?[a-zA-Z0-9.&;?=:%]{1,}url=http(?:s?):\\/\\/[a-zA-Z0-9 -:.]{1,}\\/[a-zA-Z0-9]{1,5}\\/\\?[a-zA-Z0-9.=:%]{1,}/;\n    var num;\n\n    if (service === 'osf' && videoID) {\n      num = Math.random() * 0x10000;\n\n      if (videoID.match(checkUrl)) {\n        return '<div id=\"' + num + '\" class=\"mfr mfr-file\"></div><script>' +\n          '$(document).ready(function () {new mfr.Render(\"' + num + '\", \"' + videoID + '\");' +\n          '    }); </script>';\n      }\n      return '<div id=\"' + num + '\" class=\"mfr mfr-file\"></div><script>' +\n        '$(document).ready(function () {new mfr.Render(\"' + num + '\", \"https://mfr.osf.io/' +\n        'render?url=https://osf.io/' + videoID + '/?action=download%26mode=render\");' +\n        '    }); </script>';\n    }\n\n    return videoID === '' ? '' :\n      '<div class=\"embed-responsive embed-responsive-16by9\"><iframe class=\"embed-responsive-item ' +\n      service + '-player\" type=\"text/html\" width=\"' + (options[service].width) +\n      '\" height=\"' + (options[service].height) +\n      '\" src=\"' + options.url(service, videoID, options) +\n      '\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>';\n  }\n\n  return tokenizeReturn;\n}\n\nconst defaults = {\n  url: videoUrl,\n  youtube: { width: 640, height: 390 },\n  vimeo: { width: 500, height: 281 },\n  vine: { width: 600, height: 600, embed: 'simple' },\n  prezi: { width: 550, height: 400 },\n  osf: { width: '100%', height: '100%' },\n};\n\nmodule.exports = function videoPlugin(md, options) {\n  var theOptions = options;\n  var theMd = md;\n  if (theOptions) {\n    Object.keys(defaults).forEach(function checkForKeys(key) {\n      if (typeof theOptions[key] === 'undefined') {\n        theOptions[key] = defaults[key];\n      }\n    });\n  } else {\n    theOptions = defaults;\n  }\n  theMd.renderer.rules.video = tokenizeVideo(theMd, theOptions);\n  theMd.inline.ruler.before('emphasis', 'video', videoEmbed(theMd, theOptions));\n};\n"],
  "mappings": "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",
  "names": []
}
