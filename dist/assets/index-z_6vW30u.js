import{R as c,p as g,Y as h,ap as u}from"./index-CqgRRlZL.js";function i(t){return"/interest-tags"+t}class _{static async addNewTagToDatabase(e){return await c(()=>g(i("/add"),e))}static async deleteTagFromDatabase(e){return await c(()=>g(i("/delete"),{tag_key_list:e}))}static async getTagByName(e){return await c(()=>h(i("/get-by-name")+"?tag="+e))}static async getTagByKeys(e){return await c(()=>g(i("/get-by-keys"),{key_list:e}))}static async getTagList(e){return await c(()=>g(i("/getlist"),e))}}const d=u({state:{interest_tag_cache:[],author_brief_cache:{}},mutations:{setInterestTagCache(t,e){const s=e.filter(r=>typeof r=="object"&&r!==null).filter(r=>!t.interest_tag_cache.some(a=>a.key===r.key));t.interest_tag_cache.push(...s)},addInterestTagsToCache(t,e){const s=new Set(t.interest_tag_cache.map(a=>a.key)),r=e.filter((a,n,o)=>!s.has(a.key)&&o.findIndex(y=>y.key===a.key)===n).filter(a=>typeof a=="object"&&a!==null);t.interest_tag_cache.unshift(...r)}},getters:{getInterestTag(t){return t.interest_tag_cache},getInterestTagByKey:t=>e=>t.interest_tag_cache.find(s=>s.key===e),getInterestTagByTransList:t=>(e,s)=>s.map(r=>t.interest_tag_cache.find(a=>a[e]===r)),getInterestTagByKeyList:t=>e=>e.map(s=>t.interest_tag_cache.find(r=>r.key===s))},actions:{async updateInterestByKeys({commit:t,state:e},s){const r=e.interest_tag_cache.map(n=>n.key),a=s.filter(n=>typeof n=="string"&&n!=="").filter(n=>!r.includes(n));if(a.length===0)return Promise.resolve("update interest tags cache");try{const o=await _.getTagByKeys(a);return t("setInterestTagCache",o),Promise.resolve("update interest tags cache")}catch(n){return Promise.reject(n)}}}});export{_ as I,d as c};
