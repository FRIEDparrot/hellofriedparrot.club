import{A as h}from"./accounts_api-DAjvkdJj.js";import{R as w,p as c,Y as d,Z as B,$ as v}from"./index-DA8DpHHr.js";import{c as u}from"./index-zrhLCo_s.js";function i(p){return`/blogs${p}`}class m{static async getBlogList(t){const e=i("/getlist");return w(()=>c(e,t))}static async getBlogListByUUIDList(t){const e=i("/getlist-uuid");try{const r=await c(e,{uuid_list:t});return Promise.resolve(r.data)}catch(r){return Promise.reject(r)}}static async getUserBlogList(t){const e=i("/getlist-user");try{const r=await c(e,t);return Promise.resolve(r.data)}catch(r){return Promise.reject(r)}}static async getBlogContent(t){const e=i(`/content/${t}`);try{const r=await d(e);return Promise.resolve(r.data)}catch(r){return Promise.reject(r)}}static async getBlogUserContent(t){const e=i(`/content-user/${t}`);return d(e)}static async deleteBlog(t){const e=i(`/delete/${t}`);return B(e)}static async reSubmitBlog(t,e){const r=i(`/resubmit/${t}`);return()=>c(r,{})}static async setBlogFeatured(t,e){const r=i("/set-featured");return v(r,{uuid:t,featured:e})}static async getBlogReviewContent(t){const e=i(`/review/content/${t}`);try{const r=await d(e);return Promise.resolve(r.data)}catch(r){return Promise.reject(r)}}}class y{static async convertBlogToDisplayData(t){const e=new Set(t.map(a=>a.author_id)),r=t.flatMap(a=>a.tags),o=Array.from(new Set(r));try{const a=await h.getAccountBriefList(Array.from(e));await u.dispatch("updateInterestByKeys",o);const n=u.getters.getInterestTagByKeyList(o),f=new Map(n.map(s=>[s.key,s])),_=t.map(s=>{const l=a.find(g=>g.id===s.author_id);if(!l)throw new Error(`Author ${s.author_id} not found`);return{bannerImage:s.banner_image||null,authorId:s.author_id,authorName:l.name,authorAvatar:l.avatar||null,featured:s.featured,title:s.title,abstract:s.abstract||"",tags:s.tags.map(g=>f.get(g)).filter(Boolean),viewsNum:s.view_count,starsNum:s.star_count,wordCount:s.word_count,publishTime:s.publish_time,lastModifyTime:s.last_modify_time,uuid:s.uuid,isPrivate:s.is_private}});return Promise.resolve(_)}catch(a){return console.error(a),Promise.reject(a)}}static async getBlogDisplayDataListInfo(t){try{const e=await m.getBlogList(t),r=e.tableData,o=await y.convertBlogToDisplayData(r);return Promise.resolve({data:o,count:e.count})}catch(e){return console.error(e),Promise.reject(e)}}static async getBlogDisplayDataByUUID(t){try{const e=await m.getBlogListByUUIDList(t),r=await y.convertBlogToDisplayData(e),o=new Map;for(const n of r)o.set(n.uuid,n);const a=[];for(const n of t)o.has(n)&&a.push(o.get(n));return Promise.resolve(a)}catch(e){return Promise.reject(e)}}static async getBlogContentDispData(t){try{const e=await h.getAccountBriefList([t.author_id]);if(!e)throw new Error(`Author ${t.author_id} not found`);const r=e[0],o=Array.from(new Set(t.tags));await u.dispatch("updateInterestByKeys",o);const a=u.getters.getInterestTagByKeyList(o),n={bannerImage:t.banner_image||null,authorId:t.author_id,authorName:r.name,authorAvatar:r.avatar||null,content:t.content,commentsNum:0,featured:t.featured,title:t.title,abstract:t.abstract||"",tags:a,viewsNum:t.view_count,starsNum:t.star_count,wordCount:t.word_count,publishTime:t.publish_time,lastModifyTime:t.last_modify_time,uuid:t.uuid,isPrivate:t.is_private};return Promise.resolve(n)}catch(e){return console.error(e),Promise.reject(e)}}}export{m as B,y as a};
